{"version":3,"sources":["components/MemoryCard.jsx","components/Modal.jsx","components/useModal.jsx","helpers/shuffle.js","components/GameBoard.jsx","images/images.js","images/marguerite.jpg","images/pink-rose.jpg","images/daffodil.jpg","images/daisy.jpg","images/marigold.jpg","images/sunflower.jpg","images/tulip.jpg","images/gerbera.jpg","images/water-lily.jpg","images/forget-me-not.jpg","images/jasmine.jpg","images/alstroemeria.jpg","images/dahlia.jpg","images/chrysanthemum.jpg","images/buttercup.jpg","images/azalea.jpg","images/aster.jpg","images/poppy.jpg","components/SettingsInputs.jsx","components/ScoreBoard.jsx","components/Header.jsx","helpers/getRandomElements.js","App.jsx","index.jsx"],"names":["MemoryCard","data","props","index","useState","isClicked","setIsClicked","timeout","delay","Promise","res","setTimeout","handleClick","a","name","useEffect","timer","clearTimeout","className","onClick","onKeyUp","role","tabIndex","isGrayscale","width","height","src","alt","showNames","Modal","isShowing","hide","ReactDOM","createPortal","size","document","body","useModal","customCloseHandler","setIsShowing","shuffle","array","newArray","i","length","j","Math","floor","random","GameBoard","currentImages","imagesData","setImagesData","resetGame","isShowingModal","show","wrongClick","setWrongClick","resetAllClicks","updatedData","map","image","wasClicked","resetScore","flowerName","find","setWasClickedTrue","setCurrentScore","prevScore","every","images","SettingsInput","imageCount","setImageCount","onChange","e","target","value","type","id","min","max","htmlFor","setShowNames","checked","setIsGrayscale","ScoreBoard","score","currentScore","maxScore","Header","getRandomElements","n","Error","slice","App","setMaxScore","setCurrentImages","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b326b166.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"../styles/memoryCard.css\";\n\nexport default function MemoryCard({ data, index, ...props }) {\n  const [isClicked, setIsClicked] = useState(false);\n\n  function timeout(delay) {\n    return new Promise((res) => setTimeout(res, delay));\n  }\n\n  const handleClick = async () => {\n    setIsClicked(true);\n    await timeout(100);\n    props.handleClick(data.name);\n  };\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setIsClicked(false);\n    }, 100);\n\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [isClicked]);\n\n  return (\n    <div\n      className={`memory-card ${isClicked ? \"clicked\" : \"\"}`}\n      onClick={() => handleClick(data.name)}\n      onKeyUp={() => handleClick(data.name)}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <img\n        className={props.isGrayscale ? \"grayscale\" : null}\n        width=\"180\"\n        height=\"240\"\n        src={data.src}\n        alt={data.name}\n      />\n      {props.showNames && <p>{data.name}</p>}\n    </div>\n  );\n}\n","import \"../styles/modal.css\";\nimport { IoClose } from \"react-icons/io5\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nconst Modal = ({ isShowing, hide }) =>\n  isShowing\n    ? ReactDOM.createPortal(\n        <>\n          <div className=\"modal-wrapper\">\n            <div className=\"modal\">\n              <h1>You won! You've remembered all the images.</h1>\n              <IoClose onClick={hide} size=\"2em\" />\n            </div>\n          </div>\n        </>,\n        document.body\n      )\n    : null;\n\nexport default Modal;\n","import { useState } from \"react\";\n\nconst useModal = (customCloseHandler) => {\n  const [isShowing, setIsShowing] = useState(false);\n\n  function show() {\n    setIsShowing(true);\n  }\n\n  function hide() {\n    setIsShowing(false);\n    customCloseHandler();\n  }\n\n  return [isShowing, show, hide];\n};\n\nexport default useModal;\n","// fisher/yates shuffle algorithm\nexport default function shuffle(array) {\n  const newArray = [...array];\n  for (let i = newArray.length - 1; i > 0; i -= 1) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [newArray[i], newArray[j]] = [newArray[j], newArray[i]];\n  }\n  return newArray;\n}\n","/* eslint-disable no-use-before-define */\nimport React, { useEffect, useState } from \"react\";\nimport MemoryCard from \"./MemoryCard\";\nimport \"../styles/gameBoard.css\";\nimport Modal from \"./Modal\";\nimport useModal from \"./useModal\";\nimport shuffle from \"../helpers/shuffle\";\n\nexport default function GameBoard(props) {\n  const [imagesData, setImagesData] = useState(shuffle(props.currentImages));\n  const [isShowingModal, show, hide] = useModal(resetGame);\n  const [wrongClick, setWrongClick] = useState(false);\n\n  const wasClicked = (flowerName) => {\n    const data = imagesData.find((image) => image.name === flowerName);\n    return !!data.wasClicked;\n  };\n\n  // returns an updated imagesData with wasClicked set for correct flower\n  const setWasClickedTrue = (flowerName) => {\n    const updatedData = imagesData.map((image) => {\n      if (image.name === flowerName) {\n        return {\n          ...image,\n          wasClicked: true,\n        };\n      }\n      return image;\n    });\n    setImagesData(shuffle(updatedData));\n  };\n\n  const resetAllClicks = () => {\n    const updatedData = imagesData.map((image) => ({\n      ...image,\n      wasClicked: false,\n    }));\n    setImagesData(shuffle(updatedData));\n  };\n\n  const didPlayerWin = () => {\n    const didWin = imagesData.every((image) => image.wasClicked);\n    return didWin;\n  };\n\n  useEffect(() => {\n    resetGame();\n    setImagesData(shuffle(props.currentImages));\n  }, [props.currentImages]);\n\n  useEffect(() => setTimeout(() => setWrongClick(false), 500), [wrongClick]);\n\n  function resetGame() {\n    props.resetScore();\n    resetAllClicks();\n  }\n\n  const handleClick = (flowerName) => {\n    if (wasClicked(flowerName)) {\n      setWrongClick(true);\n      resetAllClicks();\n      props.setCurrentScore(0);\n    } else {\n      setWasClickedTrue(flowerName);\n      props.setCurrentScore((prevScore) => prevScore + 1);\n    }\n  };\n\n  useEffect(() => {\n    if (didPlayerWin()) {\n      show();\n    }\n  }, [imagesData]);\n\n  return (\n    <div className={`gameboard-wrapper ${wrongClick ? \"danger\" : \"\"}`}>\n      <Modal isShowing={isShowingModal} hide={hide} />\n      <div className=\"gameboard\">\n        {imagesData.map((image) => (\n            <MemoryCard\n              key={image.name}\n              data={image}\n              handleClick={handleClick}\n              showNames={props.showNames}\n              isGrayscale={props.isGrayscale}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n","import marguerite from './marguerite.jpg';\nimport rose from './pink-rose.jpg';\nimport daffodil from './daffodil.jpg';\nimport daisy from './daisy.jpg';\nimport marigold from './marigold.jpg';\nimport sunflower from './sunflower.jpg';\nimport tulip from './tulip.jpg';\nimport gerbera from './gerbera.jpg';\nimport waterLily from './water-lily.jpg';\nimport forgetMeNot from './forget-me-not.jpg';\nimport jasmine from './jasmine.jpg';\nimport alstroemeria from './alstroemeria.jpg';\nimport dahlia from './dahlia.jpg';\nimport chrysanthemum from './chrysanthemum.jpg';\nimport buttercup from './buttercup.jpg';\nimport azalea from './azalea.jpg';\nimport aster from './aster.jpg';\nimport poppy from './poppy.jpg';\n\nconst images = [\n  { src: marguerite, name: 'marguerite' },\n  { src: rose, name: 'rose' },\n  { src: daffodil, name: 'daffodil' },\n  { src: daisy, name: 'daisy' },\n  { src: marigold, name: 'marigold' },\n  { src: sunflower, name: 'sunflower' },\n  { src: tulip, name: 'tulip' },\n  { src: gerbera, name: 'gerbera' },\n  { src: waterLily, name: 'water lily' },\n  { src: forgetMeNot, name: 'forget me not' },\n  { src: jasmine, name: 'jasmine' },\n  { src: alstroemeria, name: 'alstroemeria' },\n  { src: dahlia, name: 'dahlia' },\n  { src: chrysanthemum, name: 'chrysanthemum' },\n  { src: buttercup, name: 'buttercup' },\n  { src: azalea, name: 'azalea' },\n  { src: aster, name: 'aster' },\n  { src: poppy, name: 'poppy' },\n]\n\nexport default images;","export default __webpack_public_path__ + \"static/media/marguerite.c40d09b9.jpg\";","export default __webpack_public_path__ + \"static/media/pink-rose.1cf453da.jpg\";","export default __webpack_public_path__ + \"static/media/daffodil.36068a9d.jpg\";","export default __webpack_public_path__ + \"static/media/daisy.ceab110f.jpg\";","export default __webpack_public_path__ + \"static/media/marigold.dad571d4.jpg\";","export default __webpack_public_path__ + \"static/media/sunflower.a4c5e57d.jpg\";","export default __webpack_public_path__ + \"static/media/tulip.2cdb520f.jpg\";","export default __webpack_public_path__ + \"static/media/gerbera.fc604790.jpg\";","export default __webpack_public_path__ + \"static/media/water-lily.1ddfeb73.jpg\";","export default __webpack_public_path__ + \"static/media/forget-me-not.8485c5ec.jpg\";","export default __webpack_public_path__ + \"static/media/jasmine.22bbb7fe.jpg\";","export default __webpack_public_path__ + \"static/media/alstroemeria.1f03efb2.jpg\";","export default __webpack_public_path__ + \"static/media/dahlia.e2957cf6.jpg\";","export default __webpack_public_path__ + \"static/media/chrysanthemum.c0738adb.jpg\";","export default __webpack_public_path__ + \"static/media/buttercup.f7e567a2.jpg\";","export default __webpack_public_path__ + \"static/media/azalea.b38a261b.jpg\";","export default __webpack_public_path__ + \"static/media/aster.721e86ea.jpg\";","export default __webpack_public_path__ + \"static/media/poppy.342b20ac.jpg\";","import React, { useState } from \"react\";\nimport images from \"../images/images\";\nimport \"../styles/settingsInput.css\";\n\nexport default function SettingsInput(props) {\n  const [imageCount, setImageCount] = useState(8);\n\n  const handleDifficultyChange = (e) => {\n    setImageCount(e.target.value);\n    props.setImageCount(e.target.value);\n  };\n\n  const handleShowNamesChange = (e) => {\n    props.setShowNames(e.target.checked);\n  };\n\n  return (\n    <div className=\"settings-picker\">\n      <div className=\"part\">\n        <span className=\"heading\">Difficulty</span>\n        <input\n          onChange={handleDifficultyChange}\n          type=\"range\"\n          id=\"count\"\n          name=\"count\"\n          min={4}\n          max={images.length}\n          value={imageCount}\n        />\n        <label htmlFor=\"count\">{imageCount} images</label>\n      </div>\n      <div className=\"part checkboxes\">\n        <div className=\"checkbox-input\">\n          <label htmlFor=\"showNames\">\n            Show flower names\n            <input\n              id=\"showNames\"\n              type=\"checkbox\"\n              name=\"showNames\"\n              onChange={handleShowNamesChange}\n              checked={props.showNames}\n            />\n          </label>\n        </div>\n\n        <div className=\"checkbox-input\">\n          <label htmlFor=\"grayscale\">\n            Grayscale images\n            <input\n              id=\"grayscale\"\n              type=\"checkbox\"\n              name=\"grayscale\"\n              onChange={(e) => props.setIsGrayscale(e.target.checked)}\n              checked={props.isGrayscale}\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"../styles/scoreboard.css\";\n\nexport default function ScoreBoard({ score }) {\n  return (\n    <div className=\"scoreboard\">\n      <span>Current score: {score.currentScore}</span>\n      <span>Max score: {score.maxScore}</span>\n    </div>\n  );\n}\n","import React from 'react';\nimport '../styles/header.css'\nimport SettingsInputs from './SettingsInputs'\nimport ScoreBoard from './ScoreBoard'\n\nexport default function Header(props) {\n  return (\n    <header>\n      <SettingsInputs\n        setImageCount={props.setImageCount}\n        setShowNames={props.setShowNames}\n        showNames={props.showNames}\n        setIsGrayscale={props.setIsGrayscale}\n        isGrayscale={props.isGrayscale}\n      />\n      <div>\n        <h1>Flower Memory Game</h1>\n        <p>Click on all images but don't click on the same image twice!</p>\n      </div>\n      <ScoreBoard score={props.score} />\n    </header>\n  )\n}","import shuffle from \"./shuffle\";\n\nexport default function getRandomElements(array, n) {\n  if (n > array.length) {\n    throw new Error(\n      \"Number of requested random elements is higher than number of elements in the array\"\n    );\n  }\n  const newArray = shuffle(array);\n  return newArray.slice(0, n);\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Fragment } from \"react/cjs/react.production.min\";\nimport GameBoard from \"./components/GameBoard\";\nimport Header from \"./components/Header\";\nimport getRandomElements from \"./helpers/getRandomElements\";\nimport images from \"./images/images\";\n\nfunction App() {\n  const [currentScore, setCurrentScore] = useState(0);\n  const [maxScore, setMaxScore] = useState(0);\n  const [imageCount, setImageCount] = useState(8);\n  const [currentImages, setCurrentImages] = useState(\n    getRandomElements(images, 8)\n  );\n  const [showNames, setShowNames] = useState(true);\n  const [isGrayscale, setIsGrayscale] = useState(false);\n\n  useEffect(() => {\n    setCurrentImages(getRandomElements(images, imageCount));\n  }, [imageCount]);\n\n  const resetScore = () => {\n    setMaxScore(0);\n    setCurrentScore(0);\n  };\n\n  useEffect(() => {\n    if (currentScore > maxScore) {\n      setMaxScore(currentScore);\n    }\n  }, [currentScore]);\n\n  return (\n    <Fragment>\n      <Header\n        score={{ maxScore, currentScore }}\n        setImageCount={setImageCount}\n        setShowNames={setShowNames}\n        showNames={showNames}\n        setIsGrayscale={setIsGrayscale}\n      />\n      <GameBoard\n        setCurrentScore={setCurrentScore}\n        resetScore={resetScore}\n        currentImages={currentImages}\n        showNames={showNames}\n        isGrayscale={isGrayscale}\n      />\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles/index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}